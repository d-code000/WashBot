import logging

from aiohttp import ClientSession

import database
import webparser
from service import cache
from service import bot
import config

logger = logging.getLogger(__name__)

TRANSLATE = {
        "en": {
            "–°–¢–ò–†–ö–ê": "WASHING",
            "–ö–ê–ü–°–£–õ–ê": "CAPSULE",
            "–°–£–®–ö–ê": "DRYING",
            "–°–≤–æ–±–æ–¥–Ω–æ": "Freely",
            "–ó–∞–Ω—è—Ç–æ": "Occupied",
            "–û—Ç–∫–ª—é—á–µ–Ω–æ": "Disabled",
            "–û–ø–ª–∞—á–µ–Ω–æ": "Paid for",
            "–í —Ä–µ–º–æ–Ω—Ç–µ": "Under repair"
        }
    }


@cache(ttl=config.STATUS_TTL)
async def get_status() -> dict[str: str]:
    async with ClientSession() as session:
        try:
            machines = await database.get_machines(bot.id)
        except ConnectionError:
            machines = await webparser.get_machines(session)
        status = await webparser.get_machines_status(session)
        time = await webparser.get_time_last_update(session)
    report = {
        "ru": f"–°–æ—Å—Ç–æ—è–Ω–∏–µ –º–∞—à–∏–Ω {time[0]} –≤ {time[1]}:\n",
        "en": f"Status of machines {time[0]} in {time[1]}:\n"
    }
    for lang in report.keys():
        for machine in machines:
            if lang != "ru":
                try:
                    trans_type = TRANSLATE[lang][machine.type]
                except KeyError:
                    trans_type = machine.type
                    logger.warning(f"None translate tor type {trans_type}")
                try:
                    trans_status = TRANSLATE[lang][status[machine.seq_num]]
                except KeyError:
                    trans_status = status[machine.seq_num]
                    logger.warning(f"None translate tor status {trans_status}")
                report[lang] += (f"{'üü¢' if status[machine.seq_num] == '–°–≤–æ–±–æ–¥–Ω–æ' else 'üî¥'}"
                                 f" {trans_type} {machine.seq_num}"
                                 f" - {trans_status}\n")
            else:
                report[lang] += (f"{'üü¢' if status[machine.seq_num] == '–°–≤–æ–±–æ–¥–Ω–æ' else 'üî¥'}"
                                 f" {machine.type} {machine.seq_num}"
                                 f" - {status[machine.seq_num]}\n")
    return report


description = {
    "ru": "–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç WashBot -  –±–æ—Ç –ø–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—é üìà —Å—Ç–∞—Ç—É—Å–∞ –º–∞—à–∏–Ω.\n\n"
          f"–£—Å—Ç–∞–ª–∏ –∫–∞–∂–¥—ã–π —Ä–∞–∑ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞—Ç—å <a href='{config.SITE_URL}'>—Å–∞–π—Ç</a> üîÑ –≤ –Ω–∞–¥–µ–∂–¥–µ –Ω–∞ —Ç–æ, "
          f"—á—Ç–æ –∫–∞–∫–∞—è-–Ω–∏–±—É–¥—å –º–∞—à–∏–Ω–∞ –æ—Å–≤–æ–±–æ–¥–∏—Ç—å—Å—è?"
          " –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å—Ç–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è üîî –∏ –±—ã—Ç—å –ø–µ—Ä–≤—ã–º,"
          " –∫—Ç–æ —É–∑–Ω–∞–µ—Ç –æ–± –æ—Å–≤–æ–±–æ–¥–∏–≤—à–µ–π—Å—è –º–∞—à–∏–Ω–µ!\n\n"
          "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
          "/start - –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —Å–æ —Å–ø–∏—Å–∫–æ–º –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥\n"
          "/status - —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –º–∞—à–∏–Ω\n"
          "/sub - –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è\n"
          "/unsub - –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç –≤—Å–µ—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π\n\n"
          "üåê –î–∞–Ω–Ω—ã–π –±–æ—Ç —è–≤–ª—è–µ—Ç—Å—è –ø–∞—Ä—Å–µ—Ä–æ–º –∏ –ø–æ—ç—Ç–æ–º—É —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Å –¥–∞–Ω–Ω—ã–º–∏ —Å–∞–π—Ç–∞.\n"
          "üîÑ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø—Ä–∏—Å—ã–ª–∞—é—Ç—Å—è —Å—Ä–∞–∑—É –∂–µ –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–∞–π—Ç–µ.\n"
          f"üõ†Ô∏è –¢–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ –º–æ–¥–µ—Ä–Ω–∏–∑–∞—Ü–∏–∏: <a href='{config.TECH_SUPPORT}'>Disha</a>\n\n"
          "‚ùó –î–∞–Ω–Ω—ã–π –ø—Ä–æ–µ–∫—Ç —è–≤–ª—è–µ—Ç—Å—è –Ω–µ–∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏–º –∏ –Ω–µ –∏–º–µ–µ—Ç –Ω–∏–∫–∞–∫–æ–≥–æ –æ—Ç–Ω–æ—à–µ–Ω–∏—è –∫"
          " –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏-–ø–æ—Å—Ç–∞–≤—â–∏–∫—É —É—Å–ª—É–≥ ‚ùó",

    "en": "You are welcomed by the WashBot, a bot for tracking üìà the status of machines.\n\n"
          f"Tired of restarting every time <a href='{config.SITE_URL}'>the site</a> üîÑ in the hope that "
          f"that some machine is free?"
          " Now you can just subscribe to notifications üîî and be the first,"
          " who finds out about the freed machine!\n\n"
          "Available commands:\n"
          "/start - greeting with a list of available commands\n"
          "/status - current status of machines\n"
          "/sub - subscribe to notifications\n"
          "/unsub - unsubscribe from all notifications\n\n"
          "üåê This bot is a parser and therefore works only with site data.\n"
          "üîÑ Notifications are sent immediately after updating the data on the site.\n"
          f"üõ†Ô∏è Those. support and upgrade suggestions: <a href='{config.TECH_SUPPORT}'>Disha</a>\n\n"
          "‚ùó This project is non-commercial and has nothing to do with"
          " service provider organization ‚ùó"
}

sub = {
    "start": {
        "ru": "–í—ã–±–µ—Ä–∏—Ç–µ –º–∞—à–∏–Ω–∫–∏:",
        "en": "Choose machines:"
    },
    "subscribe": {
        "ru": "–í—ã –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –º–∞—à–∏–Ω–∫–∏",
        "en": "You have subscribed to machines"
    }
}
unsub = {
    "ru": "–í—ã –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å –æ—Ç –≤—Å–µ—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π",
    "en": "You have unsubscribed from all notifications"
}

error = {
    "ru": "–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Å–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –º—ã —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ –ø—Ä–æ–±–ª–µ–º–æ–π",
    "en": "The service is currently unavailable, we are already working on the problem"
}
